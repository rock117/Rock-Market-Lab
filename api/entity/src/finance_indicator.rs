//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Copy, Clone, Default, Debug, DeriveEntity)]
pub struct Entity;

impl EntityName for Entity {
    fn table_name(&self) -> &str {
        "finance_indicator"
    }
}

#[derive(Clone, Debug, PartialEq, DeriveModel, DeriveActiveModel, Eq, Serialize, Deserialize)]
pub struct Model {
    pub ts_code: String,
    pub ann_date: String,
    pub end_date: String,
    pub eps: Option<Decimal>,
    pub dt_eps: Option<Decimal>,
    pub total_revenue_ps: Option<Decimal>,
    pub revenue_ps: Option<Decimal>,
    pub capital_rese_ps: Option<Decimal>,
    pub surplus_rese_ps: Option<Decimal>,
    pub undist_profit_ps: Option<Decimal>,
    pub extra_item: Option<Decimal>,
    pub profit_dedt: Option<Decimal>,
    pub gross_margin: Option<Decimal>,
    pub current_ratio: Option<Decimal>,
    pub quick_ratio: Option<Decimal>,
    pub cash_ratio: Option<Decimal>,
    pub invturn_days: Option<Decimal>,
    pub arturn_days: Option<Decimal>,
    pub inv_turn: Option<Decimal>,
    pub ar_turn: Option<Decimal>,
    pub ca_turn: Option<Decimal>,
    pub fa_turn: Option<Decimal>,
    pub assets_turn: Option<Decimal>,
    pub op_income: Option<Decimal>,
    pub valuechange_income: Option<Decimal>,
    pub interst_income: Option<Decimal>,
    pub daa: Option<Decimal>,
    pub ebit: Option<Decimal>,
    pub ebitda: Option<Decimal>,
    pub fcff: Option<Decimal>,
    pub fcfe: Option<Decimal>,
    pub current_exint: Option<Decimal>,
    pub noncurrent_exint: Option<Decimal>,
    pub interestdebt: Option<Decimal>,
    pub netdebt: Option<Decimal>,
    pub tangible_asset: Option<Decimal>,
    pub working_capital: Option<Decimal>,
    pub networking_capital: Option<Decimal>,
    pub invest_capital: Option<Decimal>,
    pub retained_earnings: Option<Decimal>,
    pub diluted2_eps: Option<Decimal>,
    pub bps: Option<Decimal>,
    pub ocfps: Option<Decimal>,
    pub retainedps: Option<Decimal>,
    pub cfps: Option<Decimal>,
    pub ebit_ps: Option<Decimal>,
    pub fcff_ps: Option<Decimal>,
    pub fcfe_ps: Option<Decimal>,
    pub netprofit_margin: Option<Decimal>,
    pub grossprofit_margin: Option<Decimal>,
    pub cogs_of_sales: Option<Decimal>,
    pub expense_of_sales: Option<Decimal>,
    pub profit_to_gr: Option<Decimal>,
    pub saleexp_to_gr: Option<Decimal>,
    pub adminexp_of_gr: Option<Decimal>,
    pub finaexp_of_gr: Option<Decimal>,
    pub impai_ttm: Option<Decimal>,
    pub gc_of_gr: Option<Decimal>,
    pub op_of_gr: Option<Decimal>,
    pub ebit_of_gr: Option<Decimal>,
    pub roe: Option<Decimal>,
    pub roe_waa: Option<Decimal>,
    pub roe_dt: Option<Decimal>,
    pub roa: Option<Decimal>,
    pub npta: Option<Decimal>,
    pub roic: Option<Decimal>,
    pub roe_yearly: Option<Decimal>,
    pub roa2_yearly: Option<Decimal>,
    pub roe_avg: Option<Decimal>,
    pub opincome_of_ebt: Option<Decimal>,
    pub investincome_of_ebt: Option<Decimal>,
    pub n_op_profit_of_ebt: Option<Decimal>,
    pub tax_to_ebt: Option<Decimal>,
    pub dtprofit_to_profit: Option<Decimal>,
    pub salescash_to_or: Option<Decimal>,
    pub ocf_to_or: Option<Decimal>,
    pub ocf_to_opincome: Option<Decimal>,
    pub capitalized_to_da: Option<Decimal>,
    pub debt_to_assets: Option<Decimal>,
    pub assets_to_eqt: Option<Decimal>,
    pub dp_assets_to_eqt: Option<Decimal>,
    pub ca_to_assets: Option<Decimal>,
    pub nca_to_assets: Option<Decimal>,
    pub tbassets_to_totalassets: Option<Decimal>,
    pub int_to_talcap: Option<Decimal>,
    pub eqt_to_talcapital: Option<Decimal>,
    pub currentdebt_to_debt: Option<Decimal>,
    pub longdeb_to_debt: Option<Decimal>,
    pub ocf_to_shortdebt: Option<Decimal>,
    pub debt_to_eqt: Option<Decimal>,
    pub eqt_to_debt: Option<Decimal>,
    pub eqt_to_interestdebt: Option<Decimal>,
    pub tangibleasset_to_debt: Option<Decimal>,
    pub tangasset_to_intdebt: Option<Decimal>,
    pub tangibleasset_to_netdebt: Option<Decimal>,
    pub ocf_to_debt: Option<Decimal>,
    pub ocf_to_interestdebt: Option<Decimal>,
    pub ocf_to_netdebt: Option<Decimal>,
    pub ebit_to_interest: Option<Decimal>,
    pub longdebt_to_workingcapital: Option<Decimal>,
    pub ebitda_to_debt: Option<Decimal>,
    pub turn_days: Option<Decimal>,
    pub roa_yearly: Option<Decimal>,
    pub roa_dp: Option<Decimal>,
    pub fixed_assets: Option<Decimal>,
    pub profit_prefin_exp: Option<Decimal>,
    pub non_op_profit: Option<Decimal>,
    pub op_to_ebt: Option<Decimal>,
    pub nop_to_ebt: Option<Decimal>,
    pub ocf_to_profit: Option<Decimal>,
    pub cash_to_liqdebt: Option<Decimal>,
    pub cash_to_liqdebt_withinterest: Option<Decimal>,
    pub op_to_liqdebt: Option<Decimal>,
    pub op_to_debt: Option<Decimal>,
    pub roic_yearly: Option<Decimal>,
    pub total_fa_trun: Option<Decimal>,
    pub profit_to_op: Option<Decimal>,
    pub q_opincome: Option<Decimal>,
    pub q_investincome: Option<Decimal>,
    pub q_dtprofit: Option<Decimal>,
    pub q_eps: Option<Decimal>,
    pub q_netprofit_margin: Option<Decimal>,
    pub q_gsprofit_margin: Option<Decimal>,
    pub q_exp_to_sales: Option<Decimal>,
    pub q_profit_to_gr: Option<Decimal>,
    pub q_saleexp_to_gr: Option<Decimal>,
    pub q_adminexp_to_gr: Option<Decimal>,
    pub q_finaexp_to_gr: Option<Decimal>,
    pub q_impair_to_gr_ttm: Option<Decimal>,
    pub q_gc_to_gr: Option<Decimal>,
    pub q_op_to_gr: Option<Decimal>,
    pub q_roe: Option<Decimal>,
    pub q_dt_roe: Option<Decimal>,
    pub q_npta: Option<Decimal>,
    pub q_opincome_to_ebt: Option<Decimal>,
    pub q_investincome_to_ebt: Option<Decimal>,
    pub q_dtprofit_to_profit: Option<Decimal>,
    pub q_salescash_to_or: Option<Decimal>,
    pub q_ocf_to_sales: Option<Decimal>,
    pub q_ocf_to_or: Option<Decimal>,
    pub basic_eps_yoy: Option<Decimal>,
    pub dt_eps_yoy: Option<Decimal>,
    pub cfps_yoy: Option<Decimal>,
    pub op_yoy: Option<Decimal>,
    pub ebt_yoy: Option<Decimal>,
    pub netprofit_yoy: Option<Decimal>,
    pub dt_netprofit_yoy: Option<Decimal>,
    pub ocf_yoy: Option<Decimal>,
    pub roe_yoy: Option<Decimal>,
    pub bps_yoy: Option<Decimal>,
    pub assets_yoy: Option<Decimal>,
    pub eqt_yoy: Option<Decimal>,
    pub tr_yoy: Option<Decimal>,
    pub or_yoy: Option<Decimal>,
    pub q_gr_yoy: Option<Decimal>,
    pub q_gr_qoq: Option<Decimal>,
    pub q_sales_yoy: Option<Decimal>,
    pub q_sales_qoq: Option<Decimal>,
    pub q_op_yoy: Option<Decimal>,
    pub q_op_qoq: Option<Decimal>,
    pub q_profit_yoy: Option<Decimal>,
    pub q_profit_qoq: Option<Decimal>,
    pub q_netprofit_yoy: Option<Decimal>,
    pub q_netprofit_qoq: Option<Decimal>,
    pub equity_yoy: Option<Decimal>,
    pub rd_exp: Option<Decimal>,
    pub update_flag: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveColumn)]
pub enum Column {
    TsCode,
    AnnDate,
    EndDate,
    Eps,
    DtEps,
    TotalRevenuePs,
    RevenuePs,
    CapitalResePs,
    SurplusResePs,
    UndistProfitPs,
    ExtraItem,
    ProfitDedt,
    GrossMargin,
    CurrentRatio,
    QuickRatio,
    CashRatio,
    InvturnDays,
    ArturnDays,
    InvTurn,
    ArTurn,
    CaTurn,
    FaTurn,
    AssetsTurn,
    OpIncome,
    ValuechangeIncome,
    InterstIncome,
    Daa,
    Ebit,
    Ebitda,
    Fcff,
    Fcfe,
    CurrentExint,
    NoncurrentExint,
    Interestdebt,
    Netdebt,
    TangibleAsset,
    WorkingCapital,
    NetworkingCapital,
    InvestCapital,
    RetainedEarnings,
    Diluted2Eps,
    Bps,
    Ocfps,
    Retainedps,
    Cfps,
    EbitPs,
    FcffPs,
    FcfePs,
    NetprofitMargin,
    GrossprofitMargin,
    CogsOfSales,
    ExpenseOfSales,
    ProfitToGr,
    SaleexpToGr,
    AdminexpOfGr,
    FinaexpOfGr,
    ImpaiTtm,
    GcOfGr,
    OpOfGr,
    EbitOfGr,
    Roe,
    RoeWaa,
    RoeDt,
    Roa,
    Npta,
    Roic,
    RoeYearly,
    Roa2Yearly,
    RoeAvg,
    OpincomeOfEbt,
    InvestincomeOfEbt,
    NOpProfitOfEbt,
    TaxToEbt,
    DtprofitToProfit,
    SalescashToOr,
    OcfToOr,
    OcfToOpincome,
    CapitalizedToDa,
    DebtToAssets,
    AssetsToEqt,
    DpAssetsToEqt,
    CaToAssets,
    NcaToAssets,
    TbassetsToTotalassets,
    IntToTalcap,
    EqtToTalcapital,
    CurrentdebtToDebt,
    LongdebToDebt,
    OcfToShortdebt,
    DebtToEqt,
    EqtToDebt,
    EqtToInterestdebt,
    TangibleassetToDebt,
    TangassetToIntdebt,
    TangibleassetToNetdebt,
    OcfToDebt,
    OcfToInterestdebt,
    OcfToNetdebt,
    EbitToInterest,
    LongdebtToWorkingcapital,
    EbitdaToDebt,
    TurnDays,
    RoaYearly,
    RoaDp,
    FixedAssets,
    ProfitPrefinExp,
    NonOpProfit,
    OpToEbt,
    NopToEbt,
    OcfToProfit,
    CashToLiqdebt,
    CashToLiqdebtWithinterest,
    OpToLiqdebt,
    OpToDebt,
    RoicYearly,
    TotalFaTrun,
    ProfitToOp,
    QOpincome,
    QInvestincome,
    QDtprofit,
    QEps,
    QNetprofitMargin,
    QGsprofitMargin,
    QExpToSales,
    QProfitToGr,
    QSaleexpToGr,
    QAdminexpToGr,
    QFinaexpToGr,
    QImpairToGrTtm,
    QGcToGr,
    QOpToGr,
    QRoe,
    QDtRoe,
    QNpta,
    QOpincomeToEbt,
    QInvestincomeToEbt,
    QDtprofitToProfit,
    QSalescashToOr,
    QOcfToSales,
    QOcfToOr,
    BasicEpsYoy,
    DtEpsYoy,
    CfpsYoy,
    OpYoy,
    EbtYoy,
    NetprofitYoy,
    DtNetprofitYoy,
    OcfYoy,
    RoeYoy,
    BpsYoy,
    AssetsYoy,
    EqtYoy,
    TrYoy,
    OrYoy,
    QGrYoy,
    QGrQoq,
    QSalesYoy,
    QSalesQoq,
    QOpYoy,
    QOpQoq,
    QProfitYoy,
    QProfitQoq,
    QNetprofitYoy,
    QNetprofitQoq,
    EquityYoy,
    RdExp,
    UpdateFlag,
}

#[derive(Copy, Clone, Debug, EnumIter, DerivePrimaryKey)]
pub enum PrimaryKey {
    TsCode,
    EndDate,
}

impl PrimaryKeyTrait for PrimaryKey {
    type ValueType = (String, String);
    fn auto_increment() -> bool {
        false
    }
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl ColumnTrait for Column {
    type EntityName = Entity;
    fn def(&self) -> ColumnDef {
        match self {
            Self::TsCode => ColumnType::String(StringLen::N(10u32)).def(),
            Self::AnnDate => ColumnType::String(StringLen::N(10u32)).def(),
            Self::EndDate => ColumnType::String(StringLen::N(10u32)).def(),
            Self::Eps => ColumnType::Decimal(None).def().null(),
            Self::DtEps => ColumnType::Decimal(None).def().null(),
            Self::TotalRevenuePs => ColumnType::Decimal(None).def().null(),
            Self::RevenuePs => ColumnType::Decimal(None).def().null(),
            Self::CapitalResePs => ColumnType::Decimal(None).def().null(),
            Self::SurplusResePs => ColumnType::Decimal(None).def().null(),
            Self::UndistProfitPs => ColumnType::Decimal(None).def().null(),
            Self::ExtraItem => ColumnType::Decimal(None).def().null(),
            Self::ProfitDedt => ColumnType::Decimal(None).def().null(),
            Self::GrossMargin => ColumnType::Decimal(None).def().null(),
            Self::CurrentRatio => ColumnType::Decimal(None).def().null(),
            Self::QuickRatio => ColumnType::Decimal(None).def().null(),
            Self::CashRatio => ColumnType::Decimal(None).def().null(),
            Self::InvturnDays => ColumnType::Decimal(None).def().null(),
            Self::ArturnDays => ColumnType::Decimal(None).def().null(),
            Self::InvTurn => ColumnType::Decimal(None).def().null(),
            Self::ArTurn => ColumnType::Decimal(None).def().null(),
            Self::CaTurn => ColumnType::Decimal(None).def().null(),
            Self::FaTurn => ColumnType::Decimal(None).def().null(),
            Self::AssetsTurn => ColumnType::Decimal(None).def().null(),
            Self::OpIncome => ColumnType::Decimal(None).def().null(),
            Self::ValuechangeIncome => ColumnType::Decimal(None).def().null(),
            Self::InterstIncome => ColumnType::Decimal(None).def().null(),
            Self::Daa => ColumnType::Decimal(None).def().null(),
            Self::Ebit => ColumnType::Decimal(None).def().null(),
            Self::Ebitda => ColumnType::Decimal(None).def().null(),
            Self::Fcff => ColumnType::Decimal(None).def().null(),
            Self::Fcfe => ColumnType::Decimal(None).def().null(),
            Self::CurrentExint => ColumnType::Decimal(None).def().null(),
            Self::NoncurrentExint => ColumnType::Decimal(None).def().null(),
            Self::Interestdebt => ColumnType::Decimal(None).def().null(),
            Self::Netdebt => ColumnType::Decimal(None).def().null(),
            Self::TangibleAsset => ColumnType::Decimal(None).def().null(),
            Self::WorkingCapital => ColumnType::Decimal(None).def().null(),
            Self::NetworkingCapital => ColumnType::Decimal(None).def().null(),
            Self::InvestCapital => ColumnType::Decimal(None).def().null(),
            Self::RetainedEarnings => ColumnType::Decimal(None).def().null(),
            Self::Diluted2Eps => ColumnType::Decimal(None).def().null(),
            Self::Bps => ColumnType::Decimal(None).def().null(),
            Self::Ocfps => ColumnType::Decimal(None).def().null(),
            Self::Retainedps => ColumnType::Decimal(None).def().null(),
            Self::Cfps => ColumnType::Decimal(None).def().null(),
            Self::EbitPs => ColumnType::Decimal(None).def().null(),
            Self::FcffPs => ColumnType::Decimal(None).def().null(),
            Self::FcfePs => ColumnType::Decimal(None).def().null(),
            Self::NetprofitMargin => ColumnType::Decimal(None).def().null(),
            Self::GrossprofitMargin => ColumnType::Decimal(None).def().null(),
            Self::CogsOfSales => ColumnType::Decimal(None).def().null(),
            Self::ExpenseOfSales => ColumnType::Decimal(None).def().null(),
            Self::ProfitToGr => ColumnType::Decimal(None).def().null(),
            Self::SaleexpToGr => ColumnType::Decimal(None).def().null(),
            Self::AdminexpOfGr => ColumnType::Decimal(None).def().null(),
            Self::FinaexpOfGr => ColumnType::Decimal(None).def().null(),
            Self::ImpaiTtm => ColumnType::Decimal(None).def().null(),
            Self::GcOfGr => ColumnType::Decimal(None).def().null(),
            Self::OpOfGr => ColumnType::Decimal(None).def().null(),
            Self::EbitOfGr => ColumnType::Decimal(None).def().null(),
            Self::Roe => ColumnType::Decimal(None).def().null(),
            Self::RoeWaa => ColumnType::Decimal(None).def().null(),
            Self::RoeDt => ColumnType::Decimal(None).def().null(),
            Self::Roa => ColumnType::Decimal(None).def().null(),
            Self::Npta => ColumnType::Decimal(None).def().null(),
            Self::Roic => ColumnType::Decimal(None).def().null(),
            Self::RoeYearly => ColumnType::Decimal(None).def().null(),
            Self::Roa2Yearly => ColumnType::Decimal(None).def().null(),
            Self::RoeAvg => ColumnType::Decimal(None).def().null(),
            Self::OpincomeOfEbt => ColumnType::Decimal(None).def().null(),
            Self::InvestincomeOfEbt => ColumnType::Decimal(None).def().null(),
            Self::NOpProfitOfEbt => ColumnType::Decimal(None).def().null(),
            Self::TaxToEbt => ColumnType::Decimal(None).def().null(),
            Self::DtprofitToProfit => ColumnType::Decimal(None).def().null(),
            Self::SalescashToOr => ColumnType::Decimal(None).def().null(),
            Self::OcfToOr => ColumnType::Decimal(None).def().null(),
            Self::OcfToOpincome => ColumnType::Decimal(None).def().null(),
            Self::CapitalizedToDa => ColumnType::Decimal(None).def().null(),
            Self::DebtToAssets => ColumnType::Decimal(None).def().null(),
            Self::AssetsToEqt => ColumnType::Decimal(None).def().null(),
            Self::DpAssetsToEqt => ColumnType::Decimal(None).def().null(),
            Self::CaToAssets => ColumnType::Decimal(None).def().null(),
            Self::NcaToAssets => ColumnType::Decimal(None).def().null(),
            Self::TbassetsToTotalassets => ColumnType::Decimal(None).def().null(),
            Self::IntToTalcap => ColumnType::Decimal(None).def().null(),
            Self::EqtToTalcapital => ColumnType::Decimal(None).def().null(),
            Self::CurrentdebtToDebt => ColumnType::Decimal(None).def().null(),
            Self::LongdebToDebt => ColumnType::Decimal(None).def().null(),
            Self::OcfToShortdebt => ColumnType::Decimal(None).def().null(),
            Self::DebtToEqt => ColumnType::Decimal(None).def().null(),
            Self::EqtToDebt => ColumnType::Decimal(None).def().null(),
            Self::EqtToInterestdebt => ColumnType::Decimal(None).def().null(),
            Self::TangibleassetToDebt => ColumnType::Decimal(None).def().null(),
            Self::TangassetToIntdebt => ColumnType::Decimal(None).def().null(),
            Self::TangibleassetToNetdebt => ColumnType::Decimal(None).def().null(),
            Self::OcfToDebt => ColumnType::Decimal(None).def().null(),
            Self::OcfToInterestdebt => ColumnType::Decimal(None).def().null(),
            Self::OcfToNetdebt => ColumnType::Decimal(None).def().null(),
            Self::EbitToInterest => ColumnType::Decimal(None).def().null(),
            Self::LongdebtToWorkingcapital => ColumnType::Decimal(None).def().null(),
            Self::EbitdaToDebt => ColumnType::Decimal(None).def().null(),
            Self::TurnDays => ColumnType::Decimal(None).def().null(),
            Self::RoaYearly => ColumnType::Decimal(None).def().null(),
            Self::RoaDp => ColumnType::Decimal(None).def().null(),
            Self::FixedAssets => ColumnType::Decimal(None).def().null(),
            Self::ProfitPrefinExp => ColumnType::Decimal(None).def().null(),
            Self::NonOpProfit => ColumnType::Decimal(None).def().null(),
            Self::OpToEbt => ColumnType::Decimal(None).def().null(),
            Self::NopToEbt => ColumnType::Decimal(None).def().null(),
            Self::OcfToProfit => ColumnType::Decimal(None).def().null(),
            Self::CashToLiqdebt => ColumnType::Decimal(None).def().null(),
            Self::CashToLiqdebtWithinterest => ColumnType::Decimal(None).def().null(),
            Self::OpToLiqdebt => ColumnType::Decimal(None).def().null(),
            Self::OpToDebt => ColumnType::Decimal(None).def().null(),
            Self::RoicYearly => ColumnType::Decimal(None).def().null(),
            Self::TotalFaTrun => ColumnType::Decimal(None).def().null(),
            Self::ProfitToOp => ColumnType::Decimal(None).def().null(),
            Self::QOpincome => ColumnType::Decimal(None).def().null(),
            Self::QInvestincome => ColumnType::Decimal(None).def().null(),
            Self::QDtprofit => ColumnType::Decimal(None).def().null(),
            Self::QEps => ColumnType::Decimal(None).def().null(),
            Self::QNetprofitMargin => ColumnType::Decimal(None).def().null(),
            Self::QGsprofitMargin => ColumnType::Decimal(None).def().null(),
            Self::QExpToSales => ColumnType::Decimal(None).def().null(),
            Self::QProfitToGr => ColumnType::Decimal(None).def().null(),
            Self::QSaleexpToGr => ColumnType::Decimal(None).def().null(),
            Self::QAdminexpToGr => ColumnType::Decimal(None).def().null(),
            Self::QFinaexpToGr => ColumnType::Decimal(None).def().null(),
            Self::QImpairToGrTtm => ColumnType::Decimal(None).def().null(),
            Self::QGcToGr => ColumnType::Decimal(None).def().null(),
            Self::QOpToGr => ColumnType::Decimal(None).def().null(),
            Self::QRoe => ColumnType::Decimal(None).def().null(),
            Self::QDtRoe => ColumnType::Decimal(None).def().null(),
            Self::QNpta => ColumnType::Decimal(None).def().null(),
            Self::QOpincomeToEbt => ColumnType::Decimal(None).def().null(),
            Self::QInvestincomeToEbt => ColumnType::Decimal(None).def().null(),
            Self::QDtprofitToProfit => ColumnType::Decimal(None).def().null(),
            Self::QSalescashToOr => ColumnType::Decimal(None).def().null(),
            Self::QOcfToSales => ColumnType::Decimal(None).def().null(),
            Self::QOcfToOr => ColumnType::Decimal(None).def().null(),
            Self::BasicEpsYoy => ColumnType::Decimal(None).def().null(),
            Self::DtEpsYoy => ColumnType::Decimal(None).def().null(),
            Self::CfpsYoy => ColumnType::Decimal(None).def().null(),
            Self::OpYoy => ColumnType::Decimal(None).def().null(),
            Self::EbtYoy => ColumnType::Decimal(None).def().null(),
            Self::NetprofitYoy => ColumnType::Decimal(None).def().null(),
            Self::DtNetprofitYoy => ColumnType::Decimal(None).def().null(),
            Self::OcfYoy => ColumnType::Decimal(None).def().null(),
            Self::RoeYoy => ColumnType::Decimal(None).def().null(),
            Self::BpsYoy => ColumnType::Decimal(None).def().null(),
            Self::AssetsYoy => ColumnType::Decimal(None).def().null(),
            Self::EqtYoy => ColumnType::Decimal(None).def().null(),
            Self::TrYoy => ColumnType::Decimal(None).def().null(),
            Self::OrYoy => ColumnType::Decimal(None).def().null(),
            Self::QGrYoy => ColumnType::Decimal(None).def().null(),
            Self::QGrQoq => ColumnType::Decimal(None).def().null(),
            Self::QSalesYoy => ColumnType::Decimal(None).def().null(),
            Self::QSalesQoq => ColumnType::Decimal(None).def().null(),
            Self::QOpYoy => ColumnType::Decimal(None).def().null(),
            Self::QOpQoq => ColumnType::Decimal(None).def().null(),
            Self::QProfitYoy => ColumnType::Decimal(None).def().null(),
            Self::QProfitQoq => ColumnType::Decimal(None).def().null(),
            Self::QNetprofitYoy => ColumnType::Decimal(None).def().null(),
            Self::QNetprofitQoq => ColumnType::Decimal(None).def().null(),
            Self::EquityYoy => ColumnType::Decimal(None).def().null(),
            Self::RdExp => ColumnType::Decimal(None).def().null(),
            Self::UpdateFlag => ColumnType::String(StringLen::N(10u32)).def(),
        }
    }
}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
