//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.4

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Copy, Clone, Default, Debug, DeriveEntity)]
pub struct Entity;

impl EntityName for Entity {
    fn table_name(&self) -> &str {
        "cashflow"
    }
}

#[derive(Clone, Debug, PartialEq, DeriveModel, DeriveActiveModel, Eq, Serialize, Deserialize)]
pub struct Model {
    pub ts_code: String,
    pub ann_date: Option<String>,
    pub f_ann_date: Option<String>,
    pub end_date: String,
    pub comp_type: Option<String>,
    pub report_type: Option<String>,
    pub end_type: Option<String>,
    pub net_profit: Option<Decimal>,
    pub finan_exp: Option<Decimal>,
    pub c_fr_sale_sg: Option<Decimal>,
    pub recp_tax_rends: Option<Decimal>,
    pub n_depos_incr_fi: Option<Decimal>,
    pub n_incr_loans_cb: Option<Decimal>,
    pub n_inc_borr_oth_fi: Option<Decimal>,
    pub prem_fr_orig_contr: Option<Decimal>,
    pub n_incr_insured_dep: Option<Decimal>,
    pub n_reinsur_prem: Option<Decimal>,
    pub n_incr_disp_tfa: Option<Decimal>,
    pub ifc_cash_incr: Option<Decimal>,
    pub n_incr_disp_faas: Option<Decimal>,
    pub n_incr_loans_oth_bank: Option<Decimal>,
    pub n_cap_incr_repur: Option<Decimal>,
    pub c_fr_oth_operate_a: Option<Decimal>,
    pub c_inf_fr_operate_a: Option<Decimal>,
    pub c_paid_goods_s: Option<Decimal>,
    pub c_paid_to_for_empl: Option<Decimal>,
    pub c_paid_for_taxes: Option<Decimal>,
    pub n_incr_clt_loan_adv: Option<Decimal>,
    pub n_incr_dep_cbob: Option<Decimal>,
    pub c_pay_claims_orig_inco: Option<Decimal>,
    pub pay_handling_chrg: Option<Decimal>,
    pub pay_comm_insur_plcy: Option<Decimal>,
    pub oth_cash_pay_oper_act: Option<Decimal>,
    pub st_cash_out_act: Option<Decimal>,
    pub n_cashflow_act: Option<Decimal>,
    pub oth_recp_ral_inv_act: Option<Decimal>,
    pub c_disp_withdrwl_invest: Option<Decimal>,
    pub c_recp_return_invest: Option<Decimal>,
    pub n_recp_disp_fiolta: Option<Decimal>,
    pub n_recp_disp_sobu: Option<Decimal>,
    pub stot_inflows_inv_act: Option<Decimal>,
    pub c_pay_acq_const_fiolta: Option<Decimal>,
    pub c_paid_invest: Option<Decimal>,
    pub n_disp_subs_oth_biz: Option<Decimal>,
    pub oth_pay_ral_inv_act: Option<Decimal>,
    pub n_incr_pledge_loan: Option<Decimal>,
    pub stot_out_inv_act: Option<Decimal>,
    pub n_cashflow_inv_act: Option<Decimal>,
    pub c_recp_borrow: Option<Decimal>,
    pub proc_issue_bonds: Option<Decimal>,
    pub oth_cash_recp_ral_fnc_act: Option<Decimal>,
    pub stot_cash_in_fnc_act: Option<Decimal>,
    pub free_cashflow: Option<Decimal>,
    pub c_prepay_amt_borr: Option<Decimal>,
    pub c_pay_dist_dpcp_int_exp: Option<Decimal>,
    pub incl_dvd_profit_paid_sc_ms: Option<Decimal>,
    pub oth_cashpay_ral_fnc_act: Option<Decimal>,
    pub stot_cashout_fnc_act: Option<Decimal>,
    pub n_cash_flows_fnc_act: Option<Decimal>,
    pub eff_fx_flu_cash: Option<Decimal>,
    pub n_incr_cash_cash_equ: Option<Decimal>,
    pub c_cash_equ_beg_period: Option<Decimal>,
    pub c_cash_equ_end_period: Option<Decimal>,
    pub c_recp_cap_contrib: Option<Decimal>,
    pub incl_cash_rec_saims: Option<Decimal>,
    pub uncon_invest_loss: Option<Decimal>,
    pub prov_depr_assets: Option<Decimal>,
    pub depr_fa_coga_dpba: Option<Decimal>,
    pub amort_intang_assets: Option<Decimal>,
    pub lt_amort_deferred_exp: Option<Decimal>,
    pub decr_deferred_exp: Option<Decimal>,
    pub incr_acc_exp: Option<Decimal>,
    pub loss_disp_fiolta: Option<Decimal>,
    pub loss_scr_fa: Option<Decimal>,
    pub loss_fv_chg: Option<Decimal>,
    pub invest_loss: Option<Decimal>,
    pub decr_def_inc_tax_assets: Option<Decimal>,
    pub incr_def_inc_tax_liab: Option<Decimal>,
    pub decr_inventories: Option<Decimal>,
    pub decr_oper_payable: Option<Decimal>,
    pub incr_oper_payable: Option<Decimal>,
    pub others: Option<Decimal>,
    pub im_net_cashflow_oper_act: Option<Decimal>,
    pub conv_debt_into_cap: Option<Decimal>,
    pub conv_copbonds_due_within_1y: Option<Decimal>,
    pub fa_fnc_leases: Option<Decimal>,
    pub im_n_incr_cash_equ: Option<Decimal>,
    pub net_dism_capital_add: Option<Decimal>,
    pub net_cash_rece_sec: Option<Decimal>,
    pub credit_impa_loss: Option<Decimal>,
    pub use_right_asset_dep: Option<Decimal>,
    pub oth_loss_asset: Option<Decimal>,
    pub end_bal_cash: Option<Decimal>,
    pub beg_bal_cash: Option<Decimal>,
    pub end_bal_cash_equ: Option<Decimal>,
    pub beg_bal_cash_equ: Option<Decimal>,
    pub update_flag: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveColumn)]
pub enum Column {
    TsCode,
    AnnDate,
    FAnnDate,
    EndDate,
    CompType,
    ReportType,
    EndType,
    NetProfit,
    FinanExp,
    CFrSaleSg,
    RecpTaxRends,
    NDeposIncrFi,
    NIncrLoansCb,
    NIncBorrOthFi,
    PremFrOrigContr,
    NIncrInsuredDep,
    NReinsurPrem,
    NIncrDispTfa,
    IfcCashIncr,
    NIncrDispFaas,
    NIncrLoansOthBank,
    NCapIncrRepur,
    CFrOthOperateA,
    CInfFrOperateA,
    CPaidGoodsS,
    CPaidToForEmpl,
    CPaidForTaxes,
    NIncrCltLoanAdv,
    NIncrDepCbob,
    CPayClaimsOrigInco,
    PayHandlingChrg,
    PayCommInsurPlcy,
    OthCashPayOperAct,
    StCashOutAct,
    NCashflowAct,
    OthRecpRalInvAct,
    CDispWithdrwlInvest,
    CRecpReturnInvest,
    NRecpDispFiolta,
    NRecpDispSobu,
    StotInflowsInvAct,
    CPayAcqConstFiolta,
    CPaidInvest,
    NDispSubsOthBiz,
    OthPayRalInvAct,
    NIncrPledgeLoan,
    StotOutInvAct,
    NCashflowInvAct,
    CRecpBorrow,
    ProcIssueBonds,
    OthCashRecpRalFncAct,
    StotCashInFncAct,
    FreeCashflow,
    CPrepayAmtBorr,
    CPayDistDpcpIntExp,
    InclDvdProfitPaidScMs,
    OthCashpayRalFncAct,
    StotCashoutFncAct,
    NCashFlowsFncAct,
    EffFxFluCash,
    NIncrCashCashEqu,
    CCashEquBegPeriod,
    CCashEquEndPeriod,
    CRecpCapContrib,
    InclCashRecSaims,
    UnconInvestLoss,
    ProvDeprAssets,
    DeprFaCogaDpba,
    AmortIntangAssets,
    LtAmortDeferredExp,
    DecrDeferredExp,
    IncrAccExp,
    LossDispFiolta,
    LossScrFa,
    LossFvChg,
    InvestLoss,
    DecrDefIncTaxAssets,
    IncrDefIncTaxLiab,
    DecrInventories,
    DecrOperPayable,
    IncrOperPayable,
    Others,
    ImNetCashflowOperAct,
    ConvDebtIntoCap,
    ConvCopbondsDueWithin1y,
    FaFncLeases,
    ImNIncrCashEqu,
    NetDismCapitalAdd,
    NetCashReceSec,
    CreditImpaLoss,
    UseRightAssetDep,
    OthLossAsset,
    EndBalCash,
    BegBalCash,
    EndBalCashEqu,
    BegBalCashEqu,
    UpdateFlag,
}

#[derive(Copy, Clone, Debug, EnumIter, DerivePrimaryKey)]
pub enum PrimaryKey {
    TsCode,
    EndDate,
}

impl PrimaryKeyTrait for PrimaryKey {
    type ValueType = (String, String);
    fn auto_increment() -> bool {
        false
    }
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl ColumnTrait for Column {
    type EntityName = Entity;
    fn def(&self) -> ColumnDef {
        match self {
            Self::TsCode => ColumnType::String(StringLen::N(10u32)).def(),
            Self::AnnDate => ColumnType::String(StringLen::N(10u32)).def().null(),
            Self::FAnnDate => ColumnType::String(StringLen::N(10u32)).def().null(),
            Self::EndDate => ColumnType::String(StringLen::N(10u32)).def(),
            Self::CompType => ColumnType::String(StringLen::N(10u32)).def().null(),
            Self::ReportType => ColumnType::String(StringLen::N(10u32)).def().null(),
            Self::EndType => ColumnType::String(StringLen::N(10u32)).def().null(),
            Self::NetProfit => ColumnType::Decimal(None).def().null(),
            Self::FinanExp => ColumnType::Decimal(None).def().null(),
            Self::CFrSaleSg => ColumnType::Decimal(None).def().null(),
            Self::RecpTaxRends => ColumnType::Decimal(None).def().null(),
            Self::NDeposIncrFi => ColumnType::Decimal(None).def().null(),
            Self::NIncrLoansCb => ColumnType::Decimal(None).def().null(),
            Self::NIncBorrOthFi => ColumnType::Decimal(None).def().null(),
            Self::PremFrOrigContr => ColumnType::Decimal(None).def().null(),
            Self::NIncrInsuredDep => ColumnType::Decimal(None).def().null(),
            Self::NReinsurPrem => ColumnType::Decimal(None).def().null(),
            Self::NIncrDispTfa => ColumnType::Decimal(None).def().null(),
            Self::IfcCashIncr => ColumnType::Decimal(None).def().null(),
            Self::NIncrDispFaas => ColumnType::Decimal(None).def().null(),
            Self::NIncrLoansOthBank => ColumnType::Decimal(None).def().null(),
            Self::NCapIncrRepur => ColumnType::Decimal(None).def().null(),
            Self::CFrOthOperateA => ColumnType::Decimal(None).def().null(),
            Self::CInfFrOperateA => ColumnType::Decimal(None).def().null(),
            Self::CPaidGoodsS => ColumnType::Decimal(None).def().null(),
            Self::CPaidToForEmpl => ColumnType::Decimal(None).def().null(),
            Self::CPaidForTaxes => ColumnType::Decimal(None).def().null(),
            Self::NIncrCltLoanAdv => ColumnType::Decimal(None).def().null(),
            Self::NIncrDepCbob => ColumnType::Decimal(None).def().null(),
            Self::CPayClaimsOrigInco => ColumnType::Decimal(None).def().null(),
            Self::PayHandlingChrg => ColumnType::Decimal(None).def().null(),
            Self::PayCommInsurPlcy => ColumnType::Decimal(None).def().null(),
            Self::OthCashPayOperAct => ColumnType::Decimal(None).def().null(),
            Self::StCashOutAct => ColumnType::Decimal(None).def().null(),
            Self::NCashflowAct => ColumnType::Decimal(None).def().null(),
            Self::OthRecpRalInvAct => ColumnType::Decimal(None).def().null(),
            Self::CDispWithdrwlInvest => ColumnType::Decimal(None).def().null(),
            Self::CRecpReturnInvest => ColumnType::Decimal(None).def().null(),
            Self::NRecpDispFiolta => ColumnType::Decimal(None).def().null(),
            Self::NRecpDispSobu => ColumnType::Decimal(None).def().null(),
            Self::StotInflowsInvAct => ColumnType::Decimal(None).def().null(),
            Self::CPayAcqConstFiolta => ColumnType::Decimal(None).def().null(),
            Self::CPaidInvest => ColumnType::Decimal(None).def().null(),
            Self::NDispSubsOthBiz => ColumnType::Decimal(None).def().null(),
            Self::OthPayRalInvAct => ColumnType::Decimal(None).def().null(),
            Self::NIncrPledgeLoan => ColumnType::Decimal(None).def().null(),
            Self::StotOutInvAct => ColumnType::Decimal(None).def().null(),
            Self::NCashflowInvAct => ColumnType::Decimal(None).def().null(),
            Self::CRecpBorrow => ColumnType::Decimal(None).def().null(),
            Self::ProcIssueBonds => ColumnType::Decimal(None).def().null(),
            Self::OthCashRecpRalFncAct => ColumnType::Decimal(None).def().null(),
            Self::StotCashInFncAct => ColumnType::Decimal(None).def().null(),
            Self::FreeCashflow => ColumnType::Decimal(None).def().null(),
            Self::CPrepayAmtBorr => ColumnType::Decimal(None).def().null(),
            Self::CPayDistDpcpIntExp => ColumnType::Decimal(None).def().null(),
            Self::InclDvdProfitPaidScMs => ColumnType::Decimal(None).def().null(),
            Self::OthCashpayRalFncAct => ColumnType::Decimal(None).def().null(),
            Self::StotCashoutFncAct => ColumnType::Decimal(None).def().null(),
            Self::NCashFlowsFncAct => ColumnType::Decimal(None).def().null(),
            Self::EffFxFluCash => ColumnType::Decimal(None).def().null(),
            Self::NIncrCashCashEqu => ColumnType::Decimal(None).def().null(),
            Self::CCashEquBegPeriod => ColumnType::Decimal(None).def().null(),
            Self::CCashEquEndPeriod => ColumnType::Decimal(None).def().null(),
            Self::CRecpCapContrib => ColumnType::Decimal(None).def().null(),
            Self::InclCashRecSaims => ColumnType::Decimal(None).def().null(),
            Self::UnconInvestLoss => ColumnType::Decimal(None).def().null(),
            Self::ProvDeprAssets => ColumnType::Decimal(None).def().null(),
            Self::DeprFaCogaDpba => ColumnType::Decimal(None).def().null(),
            Self::AmortIntangAssets => ColumnType::Decimal(None).def().null(),
            Self::LtAmortDeferredExp => ColumnType::Decimal(None).def().null(),
            Self::DecrDeferredExp => ColumnType::Decimal(None).def().null(),
            Self::IncrAccExp => ColumnType::Decimal(None).def().null(),
            Self::LossDispFiolta => ColumnType::Decimal(None).def().null(),
            Self::LossScrFa => ColumnType::Decimal(None).def().null(),
            Self::LossFvChg => ColumnType::Decimal(None).def().null(),
            Self::InvestLoss => ColumnType::Decimal(None).def().null(),
            Self::DecrDefIncTaxAssets => ColumnType::Decimal(None).def().null(),
            Self::IncrDefIncTaxLiab => ColumnType::Decimal(None).def().null(),
            Self::DecrInventories => ColumnType::Decimal(None).def().null(),
            Self::DecrOperPayable => ColumnType::Decimal(None).def().null(),
            Self::IncrOperPayable => ColumnType::Decimal(None).def().null(),
            Self::Others => ColumnType::Decimal(None).def().null(),
            Self::ImNetCashflowOperAct => ColumnType::Decimal(None).def().null(),
            Self::ConvDebtIntoCap => ColumnType::Decimal(None).def().null(),
            Self::ConvCopbondsDueWithin1y => ColumnType::Decimal(None).def().null(),
            Self::FaFncLeases => ColumnType::Decimal(None).def().null(),
            Self::ImNIncrCashEqu => ColumnType::Decimal(None).def().null(),
            Self::NetDismCapitalAdd => ColumnType::Decimal(None).def().null(),
            Self::NetCashReceSec => ColumnType::Decimal(None).def().null(),
            Self::CreditImpaLoss => ColumnType::Decimal(None).def().null(),
            Self::UseRightAssetDep => ColumnType::Decimal(None).def().null(),
            Self::OthLossAsset => ColumnType::Decimal(None).def().null(),
            Self::EndBalCash => ColumnType::Decimal(None).def().null(),
            Self::BegBalCash => ColumnType::Decimal(None).def().null(),
            Self::EndBalCashEqu => ColumnType::Decimal(None).def().null(),
            Self::BegBalCashEqu => ColumnType::Decimal(None).def().null(),
            Self::UpdateFlag => ColumnType::String(StringLen::N(10u32)).def().null(),
        }
    }
}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
